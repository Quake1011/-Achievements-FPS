#define MPS 		MAXPLAYERS+1
#define PMP 		PLATFORM_MAX_PATH
#define MTF 		MENU_TIME_FOREVER
#define CID(%0) 	GetClientOfUserId(%0)
#define UID(%0) 	GetClientUserId(%0)
#define SZF(%0) 	%0, sizeof(%0)
#define LC(%0) 		for (int %0 = 1; %0 <= MaxClients; ++%0) if ( IsClientInGame(%0) ) 

// ==============================================================================================================================
// >>> Функция, создавающая триггер для выдачи награды.
// ==============================================================================================================================
native void Achievements_RegisterTrigger(char[] sName, AchievementReward ItemTake);

typedef AchievementReward = function void (int iClient, const char[] outcome);

// ==============================================================================================================================
// >>> Функция, вызывающаяся после получения награды
// >>> iClient - Игрок
// >>> sName - Достижение предмета
// ==============================================================================================================================
forward void Achievements_RewardGiven_Post(int iClient, char[] sName);

// ==============================================================================================================================
// >>> Функция, вызывающаяся до получения награды
// >>> iClient - Игрок
// >>> sName - Достижение предмета
// ==============================================================================================================================
forward void Achievements_RewardGiven(int iClient, char[] sName);

// ==============================================================================================================================
// >>> Функция, вызывающаяся при добавлении предмета в инвентарь
// >>> iClient - Игрок
// >>> sName - Достижение предмета
// ==============================================================================================================================
forward void Achievements_InventoryItemAdd(int iClient, char[] sName);

// ==============================================================================================================================
// >>> Функция, вызывающаяся до ивента
// >>> iClient - Игрок
// >>> sName - Достижение
// >>> return Plugin_Handled остановит выполненение
// ==============================================================================================================================
forward Action Achievements_Event(int iClient, char[] sName);

// ==============================================================================================================================
// >>> Функция, вызывающаяся до ивента
// >>> iClient - Игрок
// >>> sName - Название достижения из конфига
// >>> iStyle - 0 - ITEMDRAW_DEFALUT; 1 - ITEMDRAW_DISABLE
// >>> return Plugin_Handled остановит добавление в меню
// ==============================================================================================================================
forward Action Achievements_AddMenu(int iClient, char[] sName, int &iStyle);

// ==============================================================================================================================
// >>> База данных
// ==============================================================================================================================
native Database Achievements_GetDatabase();

// ==============================================================================================================================
// >>> Проверяет загрузилось ли ядро
// >>> return true or false
// ==============================================================================================================================
native bool Achievements_CoreIsLoad();

// ==============================================================================================================================
// >>> Функция, вызывающаяся при загрузке ядра
// ==============================================================================================================================
forward void Achievements_OnCoreLoaded();

// ==============================================================================================================================
// >>> Массив со всеми строчными именами ачивок
// >>> Пример вывода: Killer I, Killer II...
// ==============================================================================================================================
native ArrayList Achievements_GetNames();

// ==============================================================================================================================
// >>> Пересобирает меню с выполненными и не выполненными ачивками
// ==============================================================================================================================
native int Achievements_ReconstructMenu(int iClient);

// ==============================================================================================================================
// >>> Информация о ачивке(StringMap)
// >>> Пример: char sBuffer[256];
// >>> Handle hTrie = Achievements_GetInfo("Killer I");
// >>> GetTrieString(hTrie, "condition", sBuffer, sizeof sBuffer);
// >>> Берёт из конфига ачивки Killer I параметр condition
// ==============================================================================================================================
native Handle Achievements_GetInfo(char[] sName);

// ==============================================================================================================================
// >>> Handle KeyValues
// ==============================================================================================================================
native Handle Achievements_GetKV();

// ==============================================================================================================================
// >>> Получает статус выполениния ачивки
// >>> return -1(ачивка выполенна), если инное число, то это прогресс
// ==============================================================================================================================
native int Achievements_GetClientInfo(int iClient, char[] sName);